matrix_divided = __import__('2-matrix_divided').matrix_divided

	matrix_divided(matrix, div):
	Divides every element of a matrix.

	Args:
		matrix (list of lists): A matrix containing integers or floats.
        	div (int or float): The number by which to divide all elements of the
            	matrix.

    Returns:
        list of lists: A new matrix with every element divided by div, rounded to
            2 decimal places.

    Raises:
        TypeError: If the matrix is not a list of lists of integers or floats,
                   if each row of the matrix does not have the same size,
                   or if div is not a number (integer or float).
        ZeroDivisionError: If div is equal to 0.

    Examples:
        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> matrix_divided(matrix, 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

        >>> matrix = [
        ...     [10, 20],
        ...     [30, 40],
        ...     [50, 60]
        ... ]
        >>> matrix_divided(matrix, 2)
        [[5.0, 10.0], [15.0, 20.0], [25.0, 30.0]]

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5],
        ... ]
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size

        >>> matrix = 'not_a_matrix'
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> matrix_divided(matrix, 0)
        Traceback (most recent call last):
        ...
        ZeroDivisionError: division by zero

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, '5', 6]
        ... ]
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> matrix_divided(matrix, 'abc')
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> matrix_divided(matrix, 3.0)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> matrix_divided(matrix, 1)
        [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> matrix_divided(matrix, 0.5)
        [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, float('inf'), 6]
        ... ]
        >>> matrix_divided(matrix, 2)
        [[0.5, 1.0, 1.5], [2.0, 0.0, 3.0]]

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, float('nan'), 6]
        ... ]
        >>> matrix_divided(matrix, 2)
        [[0.5, 1.0, 1.5], [2.0, nan, 3.0]]

        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> matrix_divided(matrix)
        Traceback (most recent call last):
        ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

        >>> matrix_divided()
        Traceback (most recent call last):
        ...
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
